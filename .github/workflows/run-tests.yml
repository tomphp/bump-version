on:
  workflow_call:

jobs:
  cargo-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: tomphp/github-actions/checkout-rust-project@v0.2.0
      - uses: actions-rs/audit-check@v1.2.0
        name: Audit check cargo packages
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  cargo-check:
    runs-on: ubuntu-latest
    steps:
      - uses: tomphp/github-actions/checkout-rust-project@v0.2.0
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: check

  cargo-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: tomphp/github-actions/checkout-rust-project@v0.2.0
      - uses: specdown/setup-specdown-action@v0.2.25
      - name: Rename wsl bash
        if: runner.os == 'Windows'
        run: |
          takeown /F 'C:\Windows\System32\bash.exe'
          icacls 'C:\Windows\System32\bash.exe' /grant administrators:F
          ren 'C:\Windows\System32\bash.exe' wsl-bash.exe
      - run: cargo build --release
      - run: echo "$PWD/target/debug" >> "$GITHUB_PATH"
        shell: bash
      - run: cargo test --locked
        shell: bash

  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: tomphp/github-actions/checkout-rust-project@v0.2.0
        with:
          rust-components: rustfmt, clippy
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings -Dclippy::all -D clippy::pedantic
            -D clippy::cargo -A clippy::multiple-crate-versions
      - uses: gaurav-nelson/github-action-markdown-link-check@1.0.15
        if: matrix.os == 'ubuntu-latest'
